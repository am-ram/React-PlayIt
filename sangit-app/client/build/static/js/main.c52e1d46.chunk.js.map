{"version":3,"sources":["components/api/api.js","components/slides/slides.js","components/videolist/videolist.js","components/header/header.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["KEYS","API_KEY","Math","floor","random","length","getPopularList","a","ob","youtubeSearch","searchVideos","catch","e","console","log","alert","data","getBollywoodLongSongs","getHollywoodSongs","getGhazalList","getSearchData","query","slides","props","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","pauseOnHover","nextArrow","SampleNextArrow","prevArrow","SamplePrevArrow","responsive","breakpoint","initialSlide","className","style","borderBottom","display","padding","this","title","map","i","key","src","imgurl","alt","fontWeight","width","alignSelf","backgroundColor","color","onClick","fetchSongId","id","role","height","Component","videolist","state","popular","bollywood","hollywood","gazal","playerSongUrl","playerSongTitle","playsong","loading","componentDidMount","getBollywoodBunchSongs","getGazals","setTimeout","window","location","reload","clearTimeout","tredingList","push","thumbnails","high","url","setState","list","getSongData","songId","axios","songUrl","indexOf","customDownloader","link","document","createElement","href","download","body","appendChild","click","serachSongData","textAlign","imgUrl","audioLists","musicSrc","name","cover","singer","remove","onAudioDownload","position","top","left","header","searchValue","searchSong","songData","type","placeholder","aria-label","value","onChange","target","footer","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c52e1d46.chunk.js","sourcesContent":["import youtubeSearch from \"simple-youtube-api\";\r\n\r\nconst KEYS = [\r\n  \"AIzaSyBFXm8bZ6RgjYOCD6l2TZnyVAtR12mRZEw\",\r\n  \"AIzaSyCUAHCdcBibMNqXcoyIxAzsXDtY0NzQG04\",\r\n  \"AIzaSyA_OJxrKAp5zdKQdAxaaQHcq7OC0RXCAGw\",\r\n  \"AIzaSyAY9LYLB66XcS-V_ZLJM2XYO0Imgle6-Lw\",\r\n];\r\n\r\nconst API_KEY = KEYS[Math.floor(Math.random() * KEYS.length)];\r\n\r\nexport const getPopularList = async () => {\r\n  const ob = new youtubeSearch(API_KEY);\r\n\r\n  var data = await ob\r\n    .searchVideos(\"tseries+bollywood+songs+latest+only\", 10)\r\n    .catch((e) => {\r\n      console.log(e);\r\n      alert(\r\n        \"Sorry Admin's Daily Free Youtube Data Quato Is Over. Refresh The Page Or Try Again Later\"\r\n      );\r\n    });\r\n\r\n  return await data;\r\n};\r\n\r\nexport const getBollywoodLongSongs = async () => {\r\n  const ob = new youtubeSearch(API_KEY);\r\n\r\n  var data = await ob\r\n    .searchVideos(\"hindi bollywood songs 2019\", 10)\r\n    .catch((e) => {\r\n      console.log(e);\r\n      alert(\r\n        \"Sorry Admin's Daily Free Youtube Data Quato Is Over. Refresh The Page Or Try Again Later\"\r\n      );\r\n    });\r\n\r\n  return await data;\r\n};\r\n\r\nexport const getHollywoodSongs = async () => {\r\n  const ob = new youtubeSearch(API_KEY);\r\n\r\n  var data = await ob.searchVideos(\"hollywood songs latest\", 10).catch((e) => {\r\n    console.log(e);\r\n    alert(\r\n      \"Sorry Admin's Daily Free Youtube Data Quato Is Over. Refresh The Page Or Try Again Later\"\r\n    );\r\n  });\r\n\r\n  return await data;\r\n};\r\n\r\nexport const getGhazalList = async () => {\r\n  const ob = new youtubeSearch(API_KEY);\r\n\r\n  var data = await ob.searchVideos(\"popular ghazals\", 10).catch((e) => {\r\n    console.log(e);\r\n    alert(\r\n      \"Sorry Admin's Daily Free Youtube Data Quato Is Over. Refresh The Page Or Try Again Later\"\r\n    );\r\n  });\r\n\r\n  return await data;\r\n};\r\n\r\nexport const getSearchData = async (query) => {\r\n  const ob = new youtubeSearch(API_KEY);\r\n\r\n  var data = await ob.searchVideos(query + \" song\", 12).catch((e) => {\r\n    console.log(e);\r\n    alert(\r\n      \"Sorry Admin's Daily Free Youtube Data Quato Is Over. Refresh The Page Or Try Again Later\"\r\n    );\r\n  });\r\n\r\n  return await data;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Slicker from \"react-slick\";\r\n\r\nimport \"./slides.css\";\r\n\r\nexport default class slides extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    var settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      autoplay: true,\r\n      speed: 500,\r\n      autoplaySpeed: 7000,\r\n      cssEase: \"linear\",\r\n      pauseOnHover: true,\r\n      nextArrow: <SampleNextArrow />,\r\n      prevArrow: <SamplePrevArrow />,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            infinite: true,\r\n            dots: true,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 1000,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 1,\r\n            initialSlide: 1,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 700,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            initialSlide: 1,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div className=\"container p-1\">\r\n        <div className=\"ml-2\">\r\n          <h4\r\n            style={{\r\n              borderBottom: \"#7f67ea solid 5px \",\r\n              display: \"inline-block\",\r\n              padding: 3,\r\n            }}\r\n          >\r\n            {this.props.title}\r\n          </h4>\r\n        </div>\r\n        {this.props.data.length !== 0 ? (\r\n          <Slicker {...settings}>\r\n            {this.props.data.map((ob, i) => (\r\n              <div key={i}>\r\n                {/* <!-- Card --> */}\r\n                <div className=\"card m-2 popular p-2\">\r\n                  {/* <!-- Card image --> */}\r\n                  <div className=\"view overlay\">\r\n                    <img className=\"card-img-top\" src={ob.imgurl} alt=\"img\" />\r\n                  </div>\r\n\r\n                  {/* <!-- Card content --> */}\r\n                  <div className=\"card-body\">\r\n                    {/* <!-- Title --> */}\r\n                    <h6 className=\"card-title\" style={{ fontWeight: 600 }}>\r\n                      {ob.title}\r\n                    </h6>\r\n                    {/* <!-- Text --> */}\r\n                  </div>\r\n\r\n                  <button\r\n                    className=\"btn \"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      alignSelf: \"center\",\r\n                      backgroundColor: \"#3F51B5\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                    onClick={() => this.props.fetchSongId(ob.id, ob.title)}\r\n                  >\r\n                    Play\r\n                  </button>\r\n                </div>\r\n                {/* <!-- Card --> */}\r\n              </div>\r\n            ))}\r\n          </Slicker>\r\n        ) : (\r\n          <div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div\r\n                className=\"spinner-border\"\r\n                role=\"status\"\r\n                style={{ width: \"2em\", height: \"2em\" }}\r\n              >\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n              <span className=\"ml-2\">Loading</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"none\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"none\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getPopularList,\r\n  getBollywoodLongSongs,\r\n  getHollywoodSongs,\r\n  getGhazalList,\r\n} from \"../api/api\";\r\n\r\nimport Slide from \"../slides/slides\";\r\n\r\nimport ReactPlayer from \"react-jinke-music-player\";\r\n\r\nimport \"react-jinke-music-player/assets/index.css\";\r\n\r\nexport default class videolist extends Component {\r\n  state = {\r\n    popular: [],\r\n    bollywood: [],\r\n    hollywood: [],\r\n    gazal: [],\r\n    playerSongUrl: \"\",\r\n    playerSongTitle: \"\",\r\n    playsong: false,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      await this.getPopularList();\r\n      await this.getBollywoodBunchSongs();\r\n      await this.getHollywoodSongs();\r\n      await this.getGazals();\r\n    } catch (e) {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n        clearTimeout();\r\n      }, 20000);\r\n    }\r\n  };\r\n\r\n  getPopularList = async () => {\r\n    var tredingList = await getPopularList();\r\n\r\n    const data = [];\r\n\r\n    await tredingList.map((ob) => {\r\n      data.push({\r\n        id: ob.id,\r\n        title: ob.title,\r\n        imgurl: ob.thumbnails.high.url,\r\n      });\r\n    });\r\n\r\n    await this.setState({ popular: data });\r\n  };\r\n\r\n  getBollywoodBunchSongs = async () => {\r\n    var list = await getBollywoodLongSongs();\r\n\r\n    const data = [];\r\n\r\n    await list.map((ob) => {\r\n      data.push({\r\n        id: ob.id,\r\n        title: ob.title,\r\n        imgurl: ob.thumbnails.high.url,\r\n      });\r\n    });\r\n\r\n    await this.setState({ bollywood: data });\r\n  };\r\n\r\n  getHollywoodSongs = async () => {\r\n    var list = await getHollywoodSongs();\r\n\r\n    const data = [];\r\n\r\n    await list.map((ob) => {\r\n      data.push({\r\n        id: ob.id,\r\n        title: ob.title,\r\n        imgurl: ob.thumbnails.high.url,\r\n      });\r\n    });\r\n\r\n    await this.setState({ hollywood: data });\r\n  };\r\n\r\n  getGazals = async () => {\r\n    var list = await getGhazalList();\r\n\r\n    const data = [];\r\n\r\n    await list.map((ob) => {\r\n      data.push({\r\n        id: ob.id,\r\n        title: ob.title,\r\n        imgurl: ob.thumbnails.high.url,\r\n      });\r\n    });\r\n\r\n    await this.setState({ gazal: data });\r\n  };\r\n\r\n  getSongData = async (songId, title) => {\r\n    try {\r\n      await this.setState({\r\n        playsong: false,\r\n        playerSongTitle: \"\",\r\n        playerSongUrl: \"\",\r\n        loading: true,\r\n      });\r\n\r\n      var songUrl = await axios(`download?URL=${songId}`);\r\n\r\n      if (songUrl.data.indexOf(\"manifest\") === -1) {\r\n        await this.setState({\r\n          playerSongUrl: songUrl.data,\r\n          playerSongTitle: title,\r\n          playsong: true,\r\n          loading: false,\r\n        });\r\n      } else {\r\n        alert(\"Sorry This Link Is Broken Please Try Other Songs\");\r\n        await this.setState({\r\n          loading: false,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      alert(\"Sorry Something Want Wrong Please Try Again\");\r\n\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  customDownloader = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = this.state.playerSongUrl; // a.mp3\r\n    link.download = \"test\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"mt-3 mb-5\">\r\n          {this.props.serachSongData.length !== 0 ? (\r\n            <div className=\"container\">\r\n              <h4\r\n                style={{\r\n                  borderBottom: \"#7f67ea solid 5px \",\r\n                  display: \"inline-block\",\r\n                  padding: 3,\r\n                }}\r\n              >\r\n                Search Result\r\n              </h4>\r\n              <div className=\"row \">\r\n                {this.props.serachSongData.map((ob, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"col-lg-4 col-xs-12 col-sm-6\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    {/* <!-- Card --> */}\r\n                    <div className=\"card m-2 searchcard p-2\">\r\n                      {/* <!-- Card image --> */}\r\n                      <div className=\"view overlay\">\r\n                        <img src={ob.imgUrl} className=\"card-img-top\" />\r\n                      </div>\r\n\r\n                      {/* <!-- Card content --> */}\r\n                      <div className=\"card-body\">\r\n                        {/* <!-- Title --> */}\r\n                        <h6 className=\"card-title\" style={{ fontWeight: 600 }}>\r\n                          {ob.title}\r\n                        </h6>\r\n                        {/* <!-- Text --> */}\r\n                      </div>\r\n\r\n                      <button\r\n                        className=\"btn \"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          alignSelf: \"center\",\r\n                          backgroundColor: \"#3F51B5\",\r\n                          color: \"#fff\",\r\n                        }}\r\n                        onClick={() => this.getSongData(ob.id, ob.title)}\r\n                      >\r\n                        Play\r\n                      </button>\r\n                    </div>\r\n                    {/* <!-- Card --> */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <Slide\r\n            fetchSongId={this.getSongData}\r\n            data={this.state.popular}\r\n            title={\"Popular Bollywood\"}\r\n          />\r\n\r\n          <br></br>\r\n          <br></br>\r\n          <Slide\r\n            fetchSongId={this.getSongData}\r\n            data={this.state.bollywood}\r\n            title={\"Bollywood Albums\"}\r\n          />\r\n\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <Slide\r\n            fetchSongId={this.getSongData}\r\n            data={this.state.hollywood}\r\n            title={\"Hollywood Trend\"}\r\n          />\r\n\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <Slide\r\n            fetchSongId={this.getSongData}\r\n            data={this.state.gazal}\r\n            title={\"Hindi Gazals\"}\r\n          />\r\n\r\n          {this.state.playsong === true ? (\r\n            <ReactPlayer\r\n              audioLists={[\r\n                {\r\n                  musicSrc: this.state.playerSongUrl,\r\n                  name: this.state.playerSongTitle,\r\n                  cover:\r\n                    \"https://cdn.pixabay.com/photo/2012/04/13/20/45/record-33583_960_720.png\",\r\n                  singer: \"India\",\r\n                },\r\n              ]}\r\n              customDownloader={this.customDownloader}\r\n              remove={true}\r\n              onAudioDownload={() => console.log(\"its start\")}\r\n            />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {this.state.loading === true ? (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"spinner-border\"\r\n              role=\"status\"\r\n              style={{ height: \"2em\", width: \"2em\" }}\r\n            ></div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./header.css\";\r\n\r\nimport List from \"../videolist/videolist\";\r\n\r\nimport { getSearchData } from \"../api/api\";\r\n\r\nexport default class header extends Component {\r\n  state = {\r\n    searchValue: \"\",\r\n    serachSongData: [],\r\n  };\r\n\r\n  searchSong = async () => {\r\n    const { searchValue } = this.state;\r\n\r\n    const songData = [];\r\n\r\n    if (searchValue) {\r\n      var data = await getSearchData(searchValue);\r\n\r\n      await data.map((ob) => {\r\n        songData.push({\r\n          id: ob.id,\r\n          title: ob.title,\r\n          imgUrl: ob.thumbnails.high.url,\r\n        });\r\n      });\r\n    }\r\n\r\n    await this.setState({ serachSongData: songData });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header-main p-2 text-light\">\r\n          <div className=\"flex-container\">\r\n            <div className=\"flex header-logo\">Sangit</div>\r\n            <div className=\"flex\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  className=\"search-input form-control my-0 py-1 red-border \"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                  value={this.state.searchValue}\r\n                  onChange={(e) => {\r\n                    this.setState({ searchValue: e.target.value });\r\n                    if (e.target.value === \"\") {\r\n                      this.setState({ serachSongData: [] });\r\n                    }\r\n                  }}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    className=\"input-group-text red lighten-3\"\r\n                    id=\"basic-text1\"\r\n                    onClick={() => this.searchSong()}\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <List serachSongData={this.state.serachSongData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid p-0 m-0\">\r\n        <footer>\r\n          <div\r\n            className=\"p-3 text-light\"\r\n            style={{ textAlign: \"center\", backgroundColor: \"#3F51B5\" }}\r\n          >\r\n            <h5>This Site Is Developed By Haresh, Prashant And Mohit</h5>\r\n            <h6>\r\n              This Data Is Come From Youtube So Some Song Can Not Play Due To\r\n              Broken Link Just Play Songs And Enjoy Your Day\r\n            </h6>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport Header from \"./components/header/header\";\n\nimport Footer from \"./components/footer/footer\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid m-0 p-0\">\n        <Header />\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n\nserviceWorker.register();\n"],"sourceRoot":""}